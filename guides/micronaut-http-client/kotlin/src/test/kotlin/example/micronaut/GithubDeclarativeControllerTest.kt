package example.micronaut

import io.micronaut.http.HttpRequest
import io.micronaut.http.client.StreamingHttpClient
import io.micronaut.http.client.annotation.Client
import io.micronaut.test.extensions.junit5.annotation.MicronautTest
import jakarta.inject.Inject
import org.junit.jupiter.api.Assertions.assertTrue
import org.junit.jupiter.api.Test
import reactor.core.publisher.Flux

@MicronautTest // <1>
class GithubDeclarativeControllerTest {

    @Inject
    @field:Client("/")
    lateinit var streamingClient: StreamingHttpClient

    @Test
    fun verifyGithubReleasesCanBeFetchedWithCompileTimeAutoGeneratedAtClient() {
        //when:
        val request: HttpRequest<Any> = HttpRequest.GET("/github/releases")

        val githubReleases = Flux.from(streamingClient.jsonStream(request, GithubRelease::class.java)).toStream() // <7>

        //then:
        val regex = Regex("Micronaut( Framework)? [0-9].[0-9].[0-9]([0-9])?( (RC|M)[0-9])?")
        //then:

        //then:
        assertTrue(
            githubReleases
                .map(GithubRelease::name)
                .allMatch { name: String -> regex.matches(name) }
        )
    }
}
